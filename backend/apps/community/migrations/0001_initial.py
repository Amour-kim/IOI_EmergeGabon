# Generated by Django 4.2.7 on 2024-12-06 21:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Community",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="nom")),
                ("slug", models.SlugField(unique=True, verbose_name="slug")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="community_covers/",
                        verbose_name="image de couverture",
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(default=False, verbose_name="privée"),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=False, verbose_name="nécessite une approbation"
                    ),
                ),
                ("rules", models.TextField(blank=True, verbose_name="règles")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_communities",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="créateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "communauté",
                "verbose_name_plural": "communautés",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="nom"),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="slug")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "color",
                    models.CharField(
                        default="#000000", max_length=7, verbose_name="couleur"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "tag",
                "verbose_name_plural": "tags",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["slug"], name="community_t_slug_830be2_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Discussion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="titre")),
                ("content", models.TextField(verbose_name="contenu")),
                (
                    "is_pinned",
                    models.BooleanField(default=False, verbose_name="épinglée"),
                ),
                (
                    "is_locked",
                    models.BooleanField(default=False, verbose_name="verrouillée"),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(default=0, verbose_name="vues"),
                ),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_discussions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="auteur",
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discussions",
                        to="community.community",
                        verbose_name="communauté",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="discussions",
                        to="community.tag",
                        verbose_name="tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "discussion",
                "verbose_name_plural": "discussions",
                "ordering": ["-is_pinned", "-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="CommunityMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("MEMBER", "Membre"),
                            ("MODERATOR", "Modérateur"),
                            ("ADMIN", "Administrateur"),
                        ],
                        default="MEMBER",
                        max_length=20,
                        verbose_name="rôle",
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("is_banned", models.BooleanField(default=False, verbose_name="banni")),
                (
                    "ban_reason",
                    models.TextField(blank=True, verbose_name="raison du bannissement"),
                ),
                (
                    "ban_expiry",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="expiration du bannissement"
                    ),
                ),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="community.community",
                        verbose_name="communauté",
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="community_invitations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="invité par",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_memberships",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "adhésion",
                "verbose_name_plural": "adhésions",
            },
        ),
        migrations.AddField(
            model_name="community",
            name="members",
            field=models.ManyToManyField(
                related_name="joined_communities",
                through="community.CommunityMembership",
                to=settings.AUTH_USER_MODEL,
                verbose_name="membres",
            ),
        ),
        migrations.AddField(
            model_name="community",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="communities",
                to="community.tag",
                verbose_name="tags",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="contenu")),
                (
                    "is_edited",
                    models.BooleanField(default=False, verbose_name="modifié"),
                ),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="auteur",
                    ),
                ),
                (
                    "discussion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="community.discussion",
                        verbose_name="discussion",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="community.comment",
                        verbose_name="commentaire parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "commentaire",
                "verbose_name_plural": "commentaires",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("DISCUSSION", "Discussion"),
                            ("COMMENT", "Commentaire"),
                            ("USER", "Utilisateur"),
                        ],
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("reason", models.TextField(verbose_name="raison")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("RESOLVED", "Résolu"),
                            ("REJECTED", "Rejeté"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="statut",
                    ),
                ),
                ("handled_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="community.community",
                        verbose_name="communauté",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "handled_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reports_handled",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="traité par",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports_made",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="signaleur",
                    ),
                ),
            ],
            options={
                "verbose_name": "signalement",
                "verbose_name_plural": "signalements",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="community_r_status_1d1979_idx"
                    ),
                    models.Index(
                        fields=["report_type"], name="community_r_report__682a2d_idx"
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="community_r_content_ecc4d5_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MembershipRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(blank=True, verbose_name="message")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("APPROVED", "Approuvée"),
                            ("REJECTED", "Rejetée"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="statut",
                    ),
                ),
                ("handled_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membership_requests",
                        to="community.community",
                        verbose_name="communauté",
                    ),
                ),
                (
                    "handled_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="handled_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="traité par",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="community_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "demande d'adhésion",
                "verbose_name_plural": "demandes d'adhésion",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="community_m_status_b5e733_idx"
                    ),
                    models.Index(
                        fields=["user", "community"],
                        name="community_m_user_id_f1145a_idx",
                    ),
                ],
                "unique_together": {("user", "community")},
            },
        ),
        migrations.AddIndex(
            model_name="discussion",
            index=models.Index(
                fields=["community", "-last_activity"],
                name="community_d_communi_45e3c8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="discussion",
            index=models.Index(
                fields=["is_pinned"], name="community_d_is_pinn_24dec1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="discussion",
            index=models.Index(
                fields=["is_locked"], name="community_d_is_lock_546723_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communitymembership",
            index=models.Index(
                fields=["user", "community"], name="community_c_user_id_27bbf4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communitymembership",
            index=models.Index(fields=["role"], name="community_c_role_94529a_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="communitymembership",
            unique_together={("user", "community")},
        ),
        migrations.AddIndex(
            model_name="community",
            index=models.Index(fields=["slug"], name="community_c_slug_911dd0_idx"),
        ),
        migrations.AddIndex(
            model_name="community",
            index=models.Index(
                fields=["is_private"], name="community_c_is_priv_fc5e0f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["discussion", "created_at"],
                name="community_c_discuss_7f783e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="comment",
            index=models.Index(
                fields=["parent"], name="community_c_parent__5a3862_idx"
            ),
        ),
    ]
