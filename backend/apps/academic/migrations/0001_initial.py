# Generated by Django 4.2.7 on 2024-12-06 21:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AcademicYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.CharField(max_length=9, verbose_name="année")),
                ("start_date", models.DateField(verbose_name="date de début")),
                ("end_date", models.DateField(verbose_name="date de fin")),
                (
                    "is_current",
                    models.BooleanField(default=False, verbose_name="année en cours"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "registration_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="début des inscriptions"
                    ),
                ),
                (
                    "registration_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="fin des inscriptions"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "année académique",
                "verbose_name_plural": "années académiques",
                "ordering": ["-year"],
            },
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        choices=[(1, "Premier semestre"), (2, "Deuxième semestre")],
                        verbose_name="numéro",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="date de début")),
                ("end_date", models.DateField(verbose_name="date de fin")),
                (
                    "is_current",
                    models.BooleanField(
                        default=False, verbose_name="semestre en cours"
                    ),
                ),
                (
                    "exam_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="début des examens"
                    ),
                ),
                (
                    "exam_end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="fin des examens"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "academic_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="semesters",
                        to="academic.academicyear",
                        verbose_name="année académique",
                    ),
                ),
            ],
            options={
                "verbose_name": "semestre",
                "verbose_name_plural": "semestres",
                "ordering": ["academic_year", "number"],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (1, "Lundi"),
                            (2, "Mardi"),
                            (3, "Mercredi"),
                            (4, "Jeudi"),
                            (5, "Vendredi"),
                            (6, "Samedi"),
                        ],
                        verbose_name="jour",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="heure de début")),
                ("end_time", models.TimeField(verbose_name="heure de fin")),
                ("room", models.CharField(max_length=50, verbose_name="salle")),
                ("building", models.CharField(max_length=50, verbose_name="bâtiment")),
                ("floor", models.CharField(max_length=10, verbose_name="étage")),
                (
                    "capacity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="capacité",
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(default=True, verbose_name="récurrent"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="courses.course",
                        verbose_name="cours",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="academic.semester",
                        verbose_name="semestre",
                    ),
                ),
            ],
            options={
                "verbose_name": "horaire",
                "verbose_name_plural": "horaires",
                "ordering": ["semester", "day_of_week", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(20),
                        ],
                        verbose_name="note",
                    ),
                ),
                (
                    "coefficient",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="coefficient",
                    ),
                ),
                (
                    "grade_type",
                    models.CharField(
                        choices=[
                            ("EXAM", "Examen"),
                            ("CC", "Contrôle Continu"),
                            ("TP", "Travaux Pratiques"),
                            ("PROJECT", "Projet"),
                        ],
                        max_length=20,
                        verbose_name="type d'évaluation",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="commentaire")),
                ("graded_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grades",
                        to="courses.course",
                        verbose_name="cours",
                    ),
                ),
                (
                    "graded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="grades_given",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="noté par",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grades",
                        to="academic.semester",
                        verbose_name="semestre",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grades",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="étudiant",
                    ),
                ),
            ],
            options={
                "verbose_name": "note",
                "verbose_name_plural": "notes",
                "ordering": ["-graded_at"],
            },
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("time_in", models.TimeField(verbose_name="heure d'arrivée")),
                (
                    "time_out",
                    models.TimeField(
                        blank=True, null=True, verbose_name="heure de sortie"
                    ),
                ),
                (
                    "is_present",
                    models.BooleanField(default=False, verbose_name="présent"),
                ),
                (
                    "is_late",
                    models.BooleanField(default=False, verbose_name="en retard"),
                ),
                ("excuse", models.TextField(blank=True, verbose_name="justification")),
                (
                    "excuse_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="excuses/",
                        verbose_name="document justificatif",
                    ),
                ),
                (
                    "validated",
                    models.BooleanField(default=False, verbose_name="validé"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to="courses.course",
                        verbose_name="cours",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="étudiant",
                    ),
                ),
                (
                    "validated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendances_validated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="validé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "présence",
                "verbose_name_plural": "présences",
                "ordering": ["-date", "-time_in"],
            },
        ),
        migrations.AddIndex(
            model_name="academicyear",
            index=models.Index(fields=["year"], name="academic_ac_year_64283d_idx"),
        ),
        migrations.AddIndex(
            model_name="academicyear",
            index=models.Index(
                fields=["is_current"], name="academic_ac_is_curr_b56bf6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="semester",
            index=models.Index(
                fields=["academic_year", "number"],
                name="academic_se_academi_dd1c4a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="semester",
            index=models.Index(
                fields=["is_current"], name="academic_se_is_curr_38e0cd_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="semester",
            unique_together={("academic_year", "number")},
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["semester", "day_of_week"],
                name="academic_sc_semeste_9fcdc2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["course"], name="academic_sc_course__0dd91a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(fields=["room"], name="academic_sc_room_06e494_idx"),
        ),
        migrations.AddIndex(
            model_name="grade",
            index=models.Index(
                fields=["student", "course", "semester"],
                name="academic_gr_student_56a439_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="grade",
            index=models.Index(
                fields=["grade_type"], name="academic_gr_grade_t_d2cafb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="grade",
            unique_together={("student", "course", "semester", "grade_type")},
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["student", "course", "date"],
                name="academic_at_student_fcc09c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["is_present"], name="academic_at_is_pres_d2255a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendance",
            index=models.Index(
                fields=["validated"], name="academic_at_validat_d34e27_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="attendance",
            unique_together={("student", "course", "date")},
        ),
    ]
